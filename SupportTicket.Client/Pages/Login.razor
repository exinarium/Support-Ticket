@page "/login"
@using Microsoft.AspNetCore.Components.Authorization
@using SupportTicket.Client.Providers
@using SupportTicket.Client.Resources
@using SupportTicket.Client.Services
@using SupportTicket.SDK.Models
@inject ISessionStorageService SessionStorageService
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject IAuthenticationService AuthenticationService

<div class="sticky-top header-row d-flex align-items-center" style="height: 60px; padding-left: 20px;">
    <span style="color: white">Support Ticket</span>
</div>

<div class="d-flex justify-content-center align-items-center" style="height: calc(100vh - 60px);">
    <div class="w-50">
        <h3 class="d-flex justify-content-center m-3"><b>Login</b></h3>

        <div class="alert alert-danger d-flex align-items-center justify-content-center @(showError ? "d-flex" : "d-none")" role="alert">
            <span class="material-symbols-outlined">warning</span>
            <div>
                @errorMessage
            </div>
        </div>

        <div class="input-group mb-3">
            <span class="input-group-text bg-primary" id="email-label">
                <span class="material-symbols-outlined text-white">email</span>
            </span>
            <input
                aria-label="Email"
                aria-describedby="email-label"
                class="form-control"
                type="text"
                id="email"
                placeholder="Email Address"
                @bind="email"
                @bind:event="oninput"/>
        </div>

        <div class="input-group mb-3">
            <span class="input-group-text bg-primary" id="password-label">
                <span class="material-symbols-outlined text-white">lock</span>
            </span>
            <input
                aria-label="Password"
                aria-describedby="password-label"
                class="form-control"
                type="password"
                id="password"
                placeholder="Password"
                @bind="password"
                @bind:event="oninput"/>
        </div>


        <button class="btn btn-primary w-100" @onclick="OnLogin">Login</button>
    </div>
</div>

@code {
    private string email = string.Empty;
    private string password = string.Empty;
    private string errorMessage = string.Empty;
    private bool showError = false;
    private async Task OnLogin()
    {
        var result = await AuthenticationService.Login(email, password);

        if (result.Success)
        {
            await SessionStorageService.SetItemAsync(Constants.Token, result.Token);
            ((AuthorizedStateProvider)AuthenticationStateProvider).NotifyUserAuthentication(result.Token);
        }
        else
        {
            showError = true;
            errorMessage = result.ErrorMessage;
        }
    }
}